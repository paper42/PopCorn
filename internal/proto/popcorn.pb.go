// Code generated by protoc-gen-go. DO NOT EDIT.
// source: popcorn.proto

/*
Package popcorn is a generated protocol buffer package.

It is generated from these files:
	popcorn.proto

It has these top-level messages:
	StatsConfirmation
	Stats
	Package
	XUname
	ReportRequest
	StatsReport
*/
package popcorn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatsConfirmation struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *StatsConfirmation) Reset()                    { *m = StatsConfirmation{} }
func (m *StatsConfirmation) String() string            { return proto.CompactTextString(m) }
func (*StatsConfirmation) ProtoMessage()               {}
func (*StatsConfirmation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Stats struct {
	HostID           *string    `protobuf:"bytes,1,req,name=HostID" json:"HostID,omitempty"`
	Pkgs             []*Package `protobuf:"bytes,2,rep,name=Pkgs" json:"Pkgs,omitempty"`
	XUname           *XUname    `protobuf:"bytes,3,opt,name=XUname" json:"XUname,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Stats) Reset()                    { *m = Stats{} }
func (m *Stats) String() string            { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()               {}
func (*Stats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Stats) GetHostID() string {
	if m != nil && m.HostID != nil {
		return *m.HostID
	}
	return ""
}

func (m *Stats) GetPkgs() []*Package {
	if m != nil {
		return m.Pkgs
	}
	return nil
}

func (m *Stats) GetXUname() *XUname {
	if m != nil {
		return m.XUname
	}
	return nil
}

type Package struct {
	Name             *string `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Version          *string `protobuf:"bytes,2,req,name=Version" json:"Version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Package) Reset()                    { *m = Package{} }
func (m *Package) String() string            { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()               {}
func (*Package) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Package) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Package) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

type XUname struct {
	OSName           *string `protobuf:"bytes,1,opt,name=OSName" json:"OSName,omitempty"`
	Kernel           *string `protobuf:"bytes,2,opt,name=Kernel" json:"Kernel,omitempty"`
	Mach             *string `protobuf:"bytes,3,opt,name=Mach" json:"Mach,omitempty"`
	CPUInfo          *string `protobuf:"bytes,4,opt,name=CPUInfo" json:"CPUInfo,omitempty"`
	UpdateStatus     *string `protobuf:"bytes,5,opt,name=UpdateStatus" json:"UpdateStatus,omitempty"`
	RepoStatus       *string `protobuf:"bytes,6,opt,name=RepoStatus" json:"RepoStatus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *XUname) Reset()                    { *m = XUname{} }
func (m *XUname) String() string            { return proto.CompactTextString(m) }
func (*XUname) ProtoMessage()               {}
func (*XUname) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *XUname) GetOSName() string {
	if m != nil && m.OSName != nil {
		return *m.OSName
	}
	return ""
}

func (m *XUname) GetKernel() string {
	if m != nil && m.Kernel != nil {
		return *m.Kernel
	}
	return ""
}

func (m *XUname) GetMach() string {
	if m != nil && m.Mach != nil {
		return *m.Mach
	}
	return ""
}

func (m *XUname) GetCPUInfo() string {
	if m != nil && m.CPUInfo != nil {
		return *m.CPUInfo
	}
	return ""
}

func (m *XUname) GetUpdateStatus() string {
	if m != nil && m.UpdateStatus != nil {
		return *m.UpdateStatus
	}
	return ""
}

func (m *XUname) GetRepoStatus() string {
	if m != nil && m.RepoStatus != nil {
		return *m.RepoStatus
	}
	return ""
}

type ReportRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ReportRequest) Reset()                    { *m = ReportRequest{} }
func (m *ReportRequest) String() string            { return proto.CompactTextString(m) }
func (*ReportRequest) ProtoMessage()               {}
func (*ReportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type StatsReport struct {
	Report           []byte `protobuf:"bytes,1,req,name=Report" json:"Report,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *StatsReport) Reset()                    { *m = StatsReport{} }
func (m *StatsReport) String() string            { return proto.CompactTextString(m) }
func (*StatsReport) ProtoMessage()               {}
func (*StatsReport) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *StatsReport) GetReport() []byte {
	if m != nil {
		return m.Report
	}
	return nil
}

func init() {
	proto.RegisterType((*StatsConfirmation)(nil), "StatsConfirmation")
	proto.RegisterType((*Stats)(nil), "Stats")
	proto.RegisterType((*Package)(nil), "Package")
	proto.RegisterType((*XUname)(nil), "XUname")
	proto.RegisterType((*ReportRequest)(nil), "ReportRequest")
	proto.RegisterType((*StatsReport)(nil), "StatsReport")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PopCorn service

type PopCornClient interface {
	Update(ctx context.Context, in *Stats, opts ...grpc.CallOption) (*StatsConfirmation, error)
	Report(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (*StatsReport, error)
}

type popCornClient struct {
	cc *grpc.ClientConn
}

func NewPopCornClient(cc *grpc.ClientConn) PopCornClient {
	return &popCornClient{cc}
}

func (c *popCornClient) Update(ctx context.Context, in *Stats, opts ...grpc.CallOption) (*StatsConfirmation, error) {
	out := new(StatsConfirmation)
	err := grpc.Invoke(ctx, "/PopCorn/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *popCornClient) Report(ctx context.Context, in *ReportRequest, opts ...grpc.CallOption) (*StatsReport, error) {
	out := new(StatsReport)
	err := grpc.Invoke(ctx, "/PopCorn/Report", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PopCorn service

type PopCornServer interface {
	Update(context.Context, *Stats) (*StatsConfirmation, error)
	Report(context.Context, *ReportRequest) (*StatsReport, error)
}

func RegisterPopCornServer(s *grpc.Server, srv PopCornServer) {
	s.RegisterService(&_PopCorn_serviceDesc, srv)
}

func _PopCorn_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Stats)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PopCornServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PopCorn/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PopCornServer).Update(ctx, req.(*Stats))
	}
	return interceptor(ctx, in, info, handler)
}

func _PopCorn_Report_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PopCornServer).Report(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PopCorn/Report",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PopCornServer).Report(ctx, req.(*ReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PopCorn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PopCorn",
	HandlerType: (*PopCornServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Update",
			Handler:    _PopCorn_Update_Handler,
		},
		{
			MethodName: "Report",
			Handler:    _PopCorn_Report_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "popcorn.proto",
}

func init() { proto.RegisterFile("popcorn.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xdf, 0x4a, 0x33, 0x31,
	0x10, 0xc5, 0xbb, 0xdb, 0x76, 0xf7, 0xeb, 0xb4, 0xfd, 0xc4, 0x11, 0x24, 0x14, 0xd1, 0x12, 0x50,
	0xf6, 0x2a, 0x17, 0xbd, 0xf1, 0x01, 0xea, 0x85, 0x45, 0xd4, 0x25, 0xa5, 0x22, 0x08, 0x42, 0xa8,
	0x69, 0x2d, 0xb5, 0xc9, 0x9a, 0x4d, 0x5f, 0xca, 0xa7, 0x94, 0xfc, 0x59, 0x68, 0xf1, 0x6e, 0xce,
	0x6f, 0x67, 0xe6, 0x9c, 0x9d, 0xc0, 0xb0, 0xd2, 0xd5, 0x52, 0x1b, 0xc5, 0x2a, 0xa3, 0xad, 0xa6,
	0x67, 0x70, 0x3a, 0xb7, 0xc2, 0xd6, 0x53, 0xad, 0x56, 0x1b, 0xb3, 0x13, 0x76, 0xa3, 0x15, 0x7d,
	0x87, 0xae, 0x87, 0x78, 0x0e, 0xd9, 0xbd, 0xae, 0xed, 0xec, 0x8e, 0x24, 0xe3, 0xb4, 0xe8, 0xf1,
	0xa8, 0xf0, 0x02, 0x3a, 0xe5, 0x76, 0x5d, 0x93, 0x74, 0xdc, 0x2e, 0xfa, 0x93, 0x7f, 0xac, 0x14,
	0xcb, 0xad, 0x58, 0x4b, 0xee, 0x29, 0x5e, 0x41, 0xf6, 0xba, 0x50, 0x62, 0x27, 0x49, 0x7b, 0x9c,
	0x14, 0xfd, 0x49, 0xce, 0x82, 0xe4, 0x11, 0xd3, 0x5b, 0xc8, 0xe3, 0x04, 0x22, 0x74, 0x9e, 0x5c,
	0x67, 0xd8, 0xef, 0x6b, 0x24, 0x90, 0xbf, 0x48, 0x53, 0x6f, 0xb4, 0x22, 0xa9, 0xc7, 0x8d, 0xa4,
	0x3f, 0x49, 0xb3, 0xda, 0x45, 0x7b, 0x9e, 0xc7, 0xd1, 0xc4, 0x45, 0x0b, 0xca, 0xf1, 0x07, 0x69,
	0x94, 0xfc, 0x22, 0x69, 0xe0, 0x41, 0x39, 0xa3, 0x47, 0xb1, 0xfc, 0xf4, 0x91, 0x7a, 0xdc, 0xd7,
	0xce, 0x68, 0x5a, 0x2e, 0x66, 0x6a, 0xa5, 0x49, 0xc7, 0xe3, 0x46, 0x22, 0x85, 0xc1, 0xa2, 0xfa,
	0x10, 0x56, 0xba, 0x3b, 0xec, 0x6b, 0xd2, 0xf5, 0x9f, 0x8f, 0x18, 0x5e, 0x02, 0x70, 0x59, 0xe9,
	0xd8, 0x91, 0xf9, 0x8e, 0x03, 0x42, 0x4f, 0x60, 0xe8, 0x94, 0xb1, 0x5c, 0x7e, 0xef, 0x65, 0x6d,
	0xe9, 0x35, 0xf4, 0xfd, 0x59, 0x03, 0x75, 0x49, 0x43, 0xe5, 0x7f, 0x7e, 0xc0, 0xa3, 0x9a, 0xbc,
	0x41, 0x5e, 0xea, 0x6a, 0xaa, 0x8d, 0xc2, 0x1b, 0xc8, 0x82, 0x25, 0x66, 0xcc, 0x8f, 0x8e, 0x90,
	0xfd, 0x7d, 0xae, 0x16, 0x16, 0xcd, 0x2a, 0xfc, 0xcf, 0x8e, 0x3c, 0x47, 0x03, 0x76, 0x60, 0x49,
	0x5b, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x0f, 0xaf, 0xf0, 0xff, 0x01, 0x00, 0x00,
}
